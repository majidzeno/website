{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["library","add","faTwitter","faFacebook","faGooglePlus","faGithub","faLinkedin","faMedium","faInstagram","faCodepen","faStackOverflow","App","state","mainClass","changeClass","containerClass","_this","setState","concat","_this2","this","react_default","a","createElement","className","particles_default","href","target","onMouseOver","onMouseOut","react_fontawesome_index_es","icon","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9473e5c4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faTwitter,\n  faFacebook,\n  faGooglePlus,\n  faGithub,\n  faLinkedin,\n  faMedium,\n  faInstagram,\n  faCodepen,\n  faStackOverflow\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Particles from \"react-particles-js\";\n\nlibrary.add(\n  faTwitter,\n  faFacebook,\n  faGooglePlus,\n  faGithub,\n  faLinkedin,\n  faMedium,\n  faInstagram,\n  faCodepen,\n  faStackOverflow\n);\n\nclass App extends Component {\n  state = {\n    mainClass: \"App\"\n  };\n  changeClass = containerClass => {\n    this.setState({\n      mainClass: `App ${containerClass}`\n    });\n  };\n  render() {\n    return (\n      <div className={this.state.mainClass}>\n        <Particles className=\"particles\" />\n        <section className=\"landingPage\">\n          <div className=\"profile\">\n            <div className=\"profile__text\">\n              <p className=\"bold\">Majid Eltayeb</p>\n              <p className=\"light\">Frontend Engineer</p>\n            </div>\n            <div className=\"social__container\">\n              <a\n                href=\"https://twitter.com/majidzeno\"\n                className=\"twitter\"\n                target=\"__blank\"\n                onMouseOver={() => this.changeClass(\"color-twitter\")}\n                onMouseOut={() => this.changeClass()}>\n                <FontAwesomeIcon icon={[\"fab\", \"twitter\"]} />\n              </a>\n              <a\n                href=\"https://www.facebook.com/majid.zeno\"\n                className=\"facebook\"\n                target=\"__blank\"\n                onMouseOver={() => this.changeClass(\"color-facebook\")}\n                onMouseOut={() => this.changeClass()}>\n                <FontAwesomeIcon icon={[\"fab\", \"facebook\"]} />\n              </a>\n              <a\n                href=\"https://plus.google.com/+MajidEltayebZ\"\n                className=\"googleplus\"\n                target=\"__blank\"\n                onMouseOver={() => this.changeClass(\"color-googleplus\")}\n                onMouseOut={() => this.changeClass()}>\n                <FontAwesomeIcon icon={[\"fab\", \"google-plus\"]} />\n              </a>\n              <a\n                href=\"https://github.com/majidzeno\"\n                className=\"github\"\n                target=\"__blank\"\n                onMouseOver={() => this.changeClass(\"color-github\")}\n                onMouseOut={() => this.changeClass()}>\n                <FontAwesomeIcon icon={[\"fab\", \"github\"]} />\n              </a>\n              <a\n                href=\"https://www.linkedin.com/in/majidzeno/\"\n                className=\"linkedin\"\n                target=\"__blank\"\n                onMouseOver={() => this.changeClass(\"color-linkedin\")}\n                onMouseOut={() => this.changeClass()}>\n                <FontAwesomeIcon icon={[\"fab\", \"linkedin\"]} />\n              </a>\n              <a\n                href=\"https://medium.com/@majidzeno\"\n                className=\"medium\"\n                target=\"__blank\"\n                onMouseOver={() => this.changeClass(\"color-medium\")}\n                onMouseOut={() => this.changeClass()}>\n                <FontAwesomeIcon icon={[\"fab\", \"medium\"]} />\n              </a>\n              <a\n                href=\"https://www.instagram.com/majidzeno/\"\n                className=\"instagram\"\n                target=\"__blank\"\n                onMouseOver={() => this.changeClass(\"color-instagram\")}\n                onMouseOut={() => this.changeClass()}>\n                <FontAwesomeIcon icon={[\"fab\", \"instagram\"]} />\n              </a>\n              <a\n                href=\"https://codepen.io/majidzeno/\"\n                className=\"codepen\"\n                target=\"__blank\"\n                onMouseOver={() => this.changeClass(\"color-codepen\")}\n                onMouseOut={() => this.changeClass()}>\n                <FontAwesomeIcon icon={[\"fab\", \"codepen\"]} />\n              </a>\n              <a\n                href=\"https://stackoverflow.com/users/6669995/majid-eltayeb\"\n                className=\"envelope\"\n                target=\"__blank\"\n                onMouseOver={() => this.changeClass(\"color-envelope\")}\n                onMouseOut={() => this.changeClass()}>\n                <FontAwesomeIcon icon={[\"fab\", \"stack-overflow\"]} />\n              </a>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}